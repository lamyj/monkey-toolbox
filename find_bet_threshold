#!/usr/bin/env python3

import argparse
import os
import subprocess
import sys

def main():
    parser = argparse.ArgumentParser(description="Determine best BET threshold on image")
    parser.add_argument("input", help="Input image")
    parser.add_argument(
        "-f", "--threshold", 
        action="append", default=[], help="BET threshold value")
    parser.add_argument(
        "-c", "--cog",
        help="Center of gravity (voxels not mm) of initial mesh surface, "
            "if unspecified, use robust brain centre estimation")
    arguments = parser.parse_args()
    
    if arguments.cog:
        x,y,z = arguments.cog.split(",")
        arguments.cog = ["-c", x, y, z]
    else:
        arguments.cog = ["-R"]
    
    if not os.path.isfile("N4.nii.gz"):
        print("Running N4BiasFieldCorrection...")
        subprocess.check_call([
            "N4BiasFieldCorrection", "-i", arguments.input, "-o", "N4.nii.gz"])
    
    for value in arguments.threshold:
        print(f"Running BET with threshold {value}...")
        subprocess.check_call([
            "bet", "N4.nii.gz", f"bet_{value}", 
            "-f", value, "-g", "0", "-m"]+arguments.cog)
    processes = []
    for value in arguments.threshold:
        process = subprocess.Popen([
            "itksnap", "-g", "N4.nii.gz", "-s", f"bet_{value}_mask.nii.gz"])
        processes.append(process)
    
    for process in processes:
        process.communicate()
    
    for value in arguments.threshold:
        os.remove(f"bet_{value}.nii.gz")
        os.remove(f"bet_{value}_mask.nii.gz")

if __name__ == "__main__":
    sys.exit(main())
